{"remainingRequest":"C:\\resources\\exercise\\wonderfull-quotes\\node_modules\\babel-loader\\lib\\index.js!C:\\resources\\exercise\\wonderfull-quotes\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\resources\\exercise\\wonderfull-quotes\\src\\components\\QuoteForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\resources\\exercise\\wonderfull-quotes\\src\\components\\QuoteForm.vue","mtime":1594506908998},{"path":"C:\\resources\\exercise\\wonderfull-quotes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594507067857},{"path":"C:\\resources\\exercise\\wonderfull-quotes\\node_modules\\babel-loader\\lib\\index.js","mtime":1534881725000},{"path":"C:\\resources\\exercise\\wonderfull-quotes\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { quotesService } from '../services/Quotes';\nexport default {\n  data: function data() {\n    return {\n      quote: {\n        text: '',\n        author: ''\n      }\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit() {\n      if (quotesService.list().length >= 10) {\n        return;\n      }\n\n      if (!(this.quote.text && this.quote.author)) {\n        alert('Your quote should not be empty!');\n        return;\n      }\n\n      quotesService.addQuote(this.quote);\n      this.quote = {}; //console.log(quotesService.list())\n    }\n  }\n};",{"version":3,"sources":["QuoteForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,SAAA,aAAA,QAAA,oBAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA;AACA,cAAA,EADA;AAEA,gBAAA;AAFA;AADA,KAAA;AAMA,GARA;AAUA,WAAA;AACA,YADA,sBACA;AACA,UAAA,cAAA,IAAA,GAAA,MAAA,IAAA,EAAA,EAAA;AACA;AACA;;AAEA,UAAA,EAAA,KAAA,KAAA,CAAA,IAAA,IAAA,KAAA,KAAA,CAAA,MAAA,CAAA,EAAA;AACA,cAAA,iCAAA;AACA;AAEA;;AAEA,oBAAA,QAAA,CAAA,KAAA,KAAA;AACA,WAAA,KAAA,GAAA,EAAA,CAZA,CAcA;AACA;AAhBA;AAVA,CAAA","sourcesContent":["<template>\r\n    <div >\r\n        <form @submit.prevent=\"onSubmit\" id=\"form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"formGroupExampleInput\"><strong>Quote</strong></label>\r\n                <input v-model=\"quote.text\" type=\"text\" name=\"text\" class=\"form-control\" id=\"formGroupExampleInput\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"formGroupExampleInput2\"><strong>Author</strong></label>\r\n                <input v-model=\"quote.author\" name=\"author\" type=\"text\" class=\"form-control\" id=\"formGroupExampleInput2\">\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Add quote</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { quotesService } from '../services/Quotes'\r\n\r\nexport default {\r\n    data(){\r\n        return {\r\n            quote: {\r\n                text: '',\r\n                author: ''\r\n            },\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        onSubmit(){\r\n            if (quotesService.list().length >= 10){\r\n                return;\r\n            }\r\n            \r\n            if (!(this.quote.text && this.quote.author)) {\r\n                alert('Your quote should not be empty!')\r\n                return\r\n                \r\n            } \r\n         \r\n            quotesService.addQuote(this.quote)\r\n            this.quote = {}\r\n            \r\n            //console.log(quotesService.list())\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n#form {\r\n    \r\n    margin: 0 auto;\r\n    width: 30%;\r\n    margin-top: 1rem;\r\n    margin-bottom: 2rem;\r\n}\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}